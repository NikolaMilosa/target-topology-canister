type NakamotoCoefficient = record { value : nat8; attribute : text };
type Node = record {
  ip : text;
  node_id : principal;
  hostos_version : text;
  is_api_bn : bool;
  node_operator_id : principal;
  guestos_version : text;
  subnet_id : opt principal;
  node_provider_id : principal;
  node_reward_type : text;
  dc_id : text;
};
type Result = variant { Ok; Err : text };
type TargetTopology = record {
  entries : vec record { text; TopologyEntry };
  proposal : text;
  timestamp_seconds : nat64;
};
type TopologyEntry = record {
  subnet_limit_data_center : nat8;
  subnet_id : principal;
  is_sev : bool;
  subnet_size : nat8;
  subnet_type : text;
  subnet_limit_node_provider : nat8;
};
service : {
  add_nodes : (vec Node) -> (Result);
  get_active_topology : () -> (opt TargetTopology) query;
  get_nakamoto_for_subnet : (principal) -> (opt vec NakamotoCoefficient) query;
  get_node : (principal) -> (opt Node) query;
  get_nodes : () -> (vec Node) query;
  get_nodes_for_subnet : (principal) -> (opt vec Node) query;
}
